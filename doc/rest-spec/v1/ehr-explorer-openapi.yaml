openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jv723/reference/1.0.0
info:
  description: API for the EHR Explorer Processor microservice
  version: "1.0.0"
  title: EHR Explorer Processor API
  contact:
    email: vivod.jernej@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: stats
    description: Operations for retrieving data statistics
  - name: propositionalization
    description: Operations for performing database propositionalization
  - name: target
    description: Operations for extracting target values
  - name: clinical text
    description: Operations for extracting clinical text
paths:
  /stats:
    get:
      tags:
        - stats
      summary: get statistics for all columns
      operationId: allStats
      description: Get all statistics for all columns in the dataset
      responses:
        '200':
          description: successfully retrieved statistics for all columns
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityStats'
  /stats/{entityName}:
    get:
      tags:
        - stats
      summary: get statistics for specified entity
      description: get all statistics for all properies in the specified entity
      operationId: entityStats
      parameters:
        - name: entityName
          in: path
          description: name of the entity for which to compute the column statistics
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successfully retrieved statistics for specified entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStats'
        '400':
          description: Invalid entity name
        '404':
          description: Entity with specified name not found
  /propositionalization/wordification:
    post:
      tags:
        - propositionalization
      summary: perform Wordification propositionalization algorithm
      description: perform Woridification propositionalization algorithm with specified settings
      operationId: wordification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WordificationConfig'
      responses:
        '200':
          description: successfully performed the Wordification algorithm
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WordificationResult'
  /clinical-text/extract:
    post:
      tags:
        - clinical text
      summary: extract clinical text (note events)
      description: extract clinical text (note events) with specified settings
      operationId: clinical text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClinicalTextConfig'
      responses:
        '200':
          description: successfully extracted clinical text
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClinicalTextResult'
  /target:
    post:
      tags:
        - target
      summary: extract target value
      description: extract target value from database for specified goal
      operationId: targetExtraction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetExtractionSpec'
      responses:
        '200':
          description: successfully extracted target values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtractedTarget'
  /ids:
    post:
      tags:
        - ids
      summary: get id values
      description: get id values for specified entity
      operationId: ids
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdRetrievalSpec'
      responses:
        '200':
          description: successfully retrieved ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /ids/by-fk-path:
    post:
      tags:
        - ids
      summary: get id values
      description: get id values for entities on end of foreign key path
      operationId: ids-fk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForeignKeyPathIdRetrievalSpec'
      responses:
        '200':
          description: successfully retrieved ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
components:
  schemas:
    EntityStats:
      type: object
      properties:
        entityName:
          type: string
          example: 'admissions'
        numEntries:
          type: integer
          format: int64
        propertyStats:
          type: array
          items:
            $ref: '#/components/schemas/PropertyStats'
    PropertyStats:
      type: object
      properties:
        propertyName:
          type: string
          example: 'admission_type'
        numNull:
          type: integer
          format: int64
          example: 10128
        numUnique:
          type: integer
          format: int64
          example: 3
    WordificationConfig:
      type: object
      required:
        - rootEntitiesSpec
        - propertySpec
        - concatenationSpec
      properties:
        rootEntitiesSpec:
          $ref: '#/components/schemas/RootEntitiesSpec'
        propertySpec:
          $ref: '#/components/schemas/PropertySpec'
        compositeColumnsSpec:
          $ref: '#/components/schemas/CompositeColumnsSpec'
        valueTransformationSpec:
          $ref: '#/components/schemas/ValueTransformationSpec'
        concatenationSpec:
          $ref: '#/components/schemas/ConcatenationSpec'
    CompositeColumnsSpec:
      type: object
      required:
        - entries
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CompositeColumnsSpecEntry'
    CompositeColumnsSpecEntry:
      type: object
      required:
        - foreignKeyPath1
        - property1
        - foreignKeyPath2
        - property2
        - compositeName
        - combiner
      properties:
        foreignKeyPath1:
          type: array
          items:
            type: string
        property1:
          type: string
          example: 'admitTime'
        foreignKeyPath2:
          type: array
          items:
            type: string
        property2:
          type: string
          example: 'dob'
        compositeName:
          type: string
          example: 'ageDecades'
        combiner:
          type: string
          enum:
            - DATE_DIFF
    RootEntitiesSpec:
      type: object
      required:
        - rootEntity
        - idProperty
      properties:
        rootEntity:
          type: string
          example: 'AdmissionsEntity'
        idProperty:
          type: string
          example: 'hadmId'
        ids:
          type: array
          items:
            type: integer
            format: int64
    ConcatenationSpec:
      type: object
      required:
        - concatenationScheme
      properties:
        concatenationScheme:
          type: string
          enum:
            - ZERO
            - ONE
            - TWO
    ValueTransformationSpec:
      type: object
      required:
        - entries
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ValueTransformationSpecEntry'
    ValueTransformationSpecEntry:
      type: object
      required:
        - entity
        - property
        - transform
      properties:
        entity:
          type: string
          example: 'AdmissionsEntity'
        property:
          type: string
        transform:
          $ref: '#/components/schemas/Transform'
    Transform:
      type: object
      required:
        - kind
      properties:
        kind:
          type: string
          enum:
            - ROUNDING
            - DATE_DIFF_ROUND
        roundingMultiple:
          type: number
          format: double
          example: 20.0
        dateDiffRoundType:
          type: string
          enum:
            - YEAR
            - FIVE_YEARS
            - TEN_YEARS
            - FIFTEEN_YEARS
            - TWENTY_YEARS
    PropertySpec:
      type: object
      required:
        - entries
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PropertySpecEntry'
        rootEntityAndLimeLimit:
          type: array
          items:
            $ref: '#/components/schemas/RootEntityAndTimeLimit'
    RootEntityAndTimeLimit:
      type: object
      required:
        - rootEntityId
        - timeLim
      properties:
        rootEntityId:
          type: integer
          format: int64
        timeLim:
          type: string
          format: 'date-time'
    PropertySpecEntry:
      type: object
      required:
        - entity
        - properties
      properties:
        entity:
          type: string
          example: 'AdmissionsEntity'
        properties:
          type: array
          items:
            type: string
            example: 'insurance'
        propertyForLimit:
          type: string
          example: 'admitTime'
        compositePropertySpecEntries:
          type: array
          items:
            $ref: '#/components/schemas/CompositePropertySpecEntry'
    CompositePropertySpecEntry:
      type: object
      required:
        - propertyOnThisEntity
        - propertyOnOtherEntity
        - foreignKeyPath
        - compositePropertyName
        - combiner
      properties:
        propertyOnThisEntity:
          type: string
          example: 'inTime'
        propertyOnOtherEntity:
          type: string
          example: 'dob'
        foreignKeyPath:
          type: array
          items:
            type: string
            example: [ 'IcuStaysEntity', 'PatientsEntity' ]
        compositePropertyName:
          type: string
          example: 'ageAtAdmission'
        combiner:
          type: string
          enum:
            - DATE_DIFF
    ClinicalTextConfig:
      type: object
      required:
        - foreignKeyPath
        - textPropertyName
        - clinicalTextEnityIdPropertyName
        - rootEntitiesSpec
      properties:
        foreignKeyPath:
          type: array
          items:
            type: string
            example: [ 'AdmissionsEntity', 'NoteEventsEntity' ]
        textPropertyName:
          type: string
          example: 'text'
        clinicalTextEntityIdPropertyName:
          type: string
          example: 'rowId'
        clinicalTextDateTimePropertiesNames:
          type: array
          items:
            type: string
        rootEntityDatetimePropertyForCutoffSpec:
          $ref: '#/components/schemas/RootEntityDatetimePropertyForCutoffSpec'
        rootEntitiesSpec:
          $ref: '#/components/schemas/RootEntitiesSpec'
        clinicalTextExtractionDurationSpec:
          $ref: '#/components/schemas/ClinicalTextExtractionDurationSpec'
    RootEntityDatetimePropertyForCutoffSpec:
      type: object
      properties:
        propertyForUpperLimit:
          type: string
        propertyForLowerLimit:
          type: string
    ClinicalTextExtractionDurationSpec:
      type: object
      required:
        - firstMinutes
      properties:
        firstMinutes:
          type: integer
    WordificationResult:
      type: object
      properties:
        rootEntityId:
          type: integer
          format: int64
        timeLim:
          type: string
          format: 'date-time'
        words:
          type: array
          items:
            type: string
    ClinicalTextResult:
      type: object
      properties:
        rootEntityId:
          type: integer
          format: int64
        text:
          type: string
    TargetExtractionSpec:
      type: object
      required:
        - targetType
      properties:
        targetType:
          type: string
          enum:
            - PATIENT_DIED_DURING_ADMISSION
            - HOSPITAL_READMISSION_HAPPENED
            - ICU_STAY_READMISSION_HAPPENED
        ids:
          type: array
          items:
            type: integer
            format: int64
        ageLim:
          type: integer
          format: int32
        maxDaysIntervalPositive:
          type: integer
          format: int32
          default: 30
        maxDaysDeathAfterLastPositive:
          type: integer
          format: int32
          default: 30
    ExtractedTarget:
      type: object
      properties:
        rootEntityId:
          type: integer
          format: int64
        targetEntityId:
          type: integer
          format: int64
        targetValue:
          type: integer
        dateTimeLimit:
          type: string
          format: 'date-time'
    IdRetrievalSpec:
      type: object
      required:
        - entityName
        - idProperty
      properties:
        entityName:
          type: string
        idProperty:
          type: string
        filterSpecs:
          type: array
          items:
            $ref: '#/components/schemas/IdRetrievalFilterSpec'
    ForeignKeyPathIdRetrievalSpec:
      type: object
      required:
        - foreignKeyPath
        - rootEntityIdProperty
        - endEntityIdProperty
        - rootEntityIds
      properties:
        foreignKeyPath:
          type: array
          items:
            type: string
            example: [ 'PatientsEntity', 'IcuStaysEntity' ]
        rootEntityIdProperty:
          type: string
          example: 'subjectId'
        endEntityIdProperty:
          type: string
          example: 'icuStayId'
        rootEntityIds:
          type: array
          items:
            type: integer
            format: int64
        filterSpecs:
          type: array
          items:
            $ref: '#/components/schemas/IdRetrievalFilterSpec'
    IdRetrievalFilterSpec:
      type: object
      required:
        - foreignKeyPath
        - propertyName
        - comparator
        - propertyVal
      properties:
        foreignKeyPath:
          type: array
          items:
            type: string
            example: [ 'AdmissionsEntity', 'NoteEventsEntity' ]
        propertyName:
          type: string
        comparator:
          type: string
          enum:
            - LESS
            - EQUAL
            - MORE
        propertyVal:
          type: object
